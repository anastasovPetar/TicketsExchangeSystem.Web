@using Microsoft.AspNetCore.Identity
@using TicketsExchangeSystem.Data.Models;
@using TicketsExchangeSystem.Services.Data.Interfaces;
@using TicketsExchangeSystem.Web.Infrastructure.Extentions;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ISellerService SellerService

@{
    bool isSeller = await SellerService.SellerExistsByUserIdAsync(this.User.GetId()!);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {  
        @if (isSeller)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Ticket" asp-action="Own">My tickets</a>
            </li>
        }else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Seller" asp-action="BecomeSeller">Sell tickets!</a>
            </li>
        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
